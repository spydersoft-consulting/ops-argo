alloy:
  alloy:
    extraPorts:
      - name: "otlp-grpc"
        port: 4317
        targetPort: 4317
        protocol: "TCP"
      - name: "otlp-http"
        port: 4318
        targetPort: 4318
        protocol: "TCP"
    configMap:
      content: |
        prometheus.remote_write "default" {
          endpoint {
            url = "https://mimir.mattgerega.net/api/v1/push"
            headers = {
              "X-Scope-OrgID" = "nonproduction",
            }
          }
          external_labels = {
            cluster = "nonproduction",
          }
        }

        loki.write "default" {
          endpoint {
            url = "https://loki.mattgerega.net/loki/api/v1/push"
            tenant_id = "nonproduction"
          }
          
          external_labels = {
            cluster = "nonproduction",
            exporter = "grafana-alloy"
          }
        }



        otelcol.processor.memory_limiter "default" {
          check_interval = "1s"
          limit          = "1GiB"

          output {
            metrics = [otelcol.processor.batch.default.input]
            logs    = [otelcol.processor.batch.default.input]
            traces  = [otelcol.processor.batch.default.input]
          }
        }

        otelcol.processor.batch "default" {
          output {
            metrics = [otelcol.exporter.prometheus.default.input]
            logs    = [otelcol.exporter.loki.default.input]
            traces  = [otelcol.exporter.otlp.default.input]
          }
        }
        
        otelcol.receiver.otlp "example" {
          grpc {
            endpoint = "127.0.0.1:4317"
          }

          http {
            endpoint = "127.0.0.1:4318"
          }

          output {
            metrics = [otelcol.processor.batch.default.input]
            logs    = [otelcol.processor.batch.default.input]
            traces  = [otelcol.processor.batch.default.input]
          }
        }

        otelcol.exporter.loki "default" {
          forward_to = [loki.write.default.receiver]
        }

        otelcol.exporter.prometheus "default" {
          forward_to = [prometheus.remote_write.default.receiver]
        }

        otelcol.exporter.otlp "default" {
          client {
            endpoint = "tfx-internal.gerega.net:32326"
            headers = {
              "X-Scope-OrgID" = "nonproduction",
            }
            tls {
              insecure = true
            }
          }
        }