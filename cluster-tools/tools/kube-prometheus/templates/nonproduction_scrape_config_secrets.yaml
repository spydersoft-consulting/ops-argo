{{- if .Values.nonproduction_scrape_config.enabled }}
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: {{ .Values.nonproduction_scrape_config.name }}-es
spec:
  refreshInterval: 1h0m0s
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: {{ .Values.nonproduction_scrape_config.name }}
    template:
      engineVersion: v2
      data:
        scrape-jobs.yaml: |
          - job_name: 'linkerd-controller'
            scrape_interval: 10s
            scrape_timeout: 10s
            kubernetes_sd_configs:
            - role: pod
              namespaces:
                names:
                - '{{.Values.linkerdNamespace}}'
                - '{{.Values.namespace}}'
            relabel_configs:
            - source_labels:
                - __meta_kubernetes_pod_container_port_name
              action: keep
              regex: admin-http
            - source_labels: [__meta_kubernetes_pod_container_name]
              action: replace
              target_label: component

          - job_name: 'linkerd-service-mirror'
            scrape_interval: 10s
            scrape_timeout: 10s
            kubernetes_sd_configs:
            - role: pod
            relabel_configs:
            - source_labels:
              - __meta_kubernetes_pod_label_linkerd_io_control_plane_component
              - __meta_kubernetes_pod_container_port_name
              action: keep
              regex: linkerd-service-mirror;admin-http$
            - source_labels: [__meta_kubernetes_pod_container_name]
              action: replace
              target_label: component

          - job_name: 'linkerd-proxy'
            scrape_interval: 10s
            scrape_timeout: 10s
            kubernetes_sd_configs:
            - role: pod
            relabel_configs:
            - source_labels:
              - __meta_kubernetes_pod_container_name
              - __meta_kubernetes_pod_container_port_name
              - __meta_kubernetes_pod_label_linkerd_io_control_plane_ns
              action: keep
              regex: ^linkerd-proxy;linkerd-admin;linkerd$
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: pod
            # special case k8s' "job" label, to not interfere with prometheus' "job"
            # label
            # __meta_kubernetes_pod_label_linkerd_io_proxy_job=foo =>
            # k8s_job=foo
            - source_labels: [__meta_kubernetes_pod_label_linkerd_io_proxy_job]
              action: replace
              target_label: k8s_job
            # drop __meta_kubernetes_pod_label_linkerd_io_proxy_job
            - action: labeldrop
              regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job
            # __meta_kubernetes_pod_label_linkerd_io_proxy_deployment=foo =>
            # deployment=foo
            - action: labelmap
              regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
            # drop all labels that we just made copies of in the previous labelmap
            - action: labeldrop
              regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
            # __meta_kubernetes_pod_label_linkerd_io_foo=bar =>
            # foo=bar
            - action: labelmap
              regex: __meta_kubernetes_pod_label_linkerd_io_(.+)
            # Copy all pod labels to tmp labels
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
              replacement: __tmp_pod_label_$1
            # Take `linkerd_io_` prefixed labels and copy them without the prefix
            - action: labelmap
              regex: __tmp_pod_label_linkerd_io_(.+)
              replacement:  __tmp_pod_label_$1
            # Drop the `linkerd_io_` originals
            - action: labeldrop
              regex: __tmp_pod_label_linkerd_io_(.+)
            # Copy tmp labels into real labels
            - action: labelmap
              regex: __tmp_pod_label_(.+)
  data:
  - secretKey: token
    remoteRef:
      key: secrets-k8/monitoring/minio
      property: authtoken
  - secretKey: metric_token
    remoteRef:
      key: secrets-k8/monitoring/vault
      property: metric-token
  - secretKey: windows_targets
    remoteRef:
      key: secrets-k8/monitoring/targets/internal
      property: windows-targets
  - secretKey: minio_targets
    remoteRef:
      key: secrets-k8/monitoring/targets/internal
      property: minio-targets
  - secretKey: vault_targets
    remoteRef:
      key: secrets-k8/monitoring/targets/internal
      property: vault-targets
{{- end }}